package client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class EmployeeHandler {
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;
    private Scanner scanner;
    private int choice;

    public EmployeeHandler(Socket socket, PrintWriter out, BufferedReader in) {
        this.socket = socket;
        this.out = out;
        this.in = in;
        this.scanner = new Scanner(System.in);
    }

    public void showMenu() throws IOException {
        do {
            System.out.println("Employee Menu:");
            System.out.println("1. View Notifications");
            System.out.println("2. View Menu");
            System.out.println("3. Give Feedback");
            System.out.println("4. Logout");
            choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline after nextInt()
            handleUserChoice(choice);
        } while (choice != 4);

        System.out.println("Logged out. Goodbye!");
    }

    private void handleUserChoice(int choice) throws IOException {
        switch (choice) {
            case 1:
                viewNotifications();
                break;
            case 2:
                viewMenu();
                break;
            case 3:
                giveFeedback();
                break;
            case 4:
                logout();
                break;
            default:
                System.out.println("Invalid choice. Please try again.");
                break;
        }
    }

    private void viewNotifications() throws IOException {
        out.println("Employee_VIEW_NOTIFICATIONS");
        out.flush(); // Ensure the command is sent immediately
        receiveAndPrintMultipleResponses();
    }

    private void viewMenu() throws IOException {
        out.println("Employee_VIEW_MENU");
        out.flush(); // Ensure the command is sent immediately
        receiveAndPrintMultipleResponses();
    }

    private void giveFeedback() throws IOException {
        out.println("Employee_GIVE_FEEDBACK");
        out.flush(); // Ensure the command is sent immediately

        out.println("Enter item ID:");
        out.flush();
        int itemId = Integer.parseInt(scanner.nextLine());

        out.println("Enter rating (1-5):");
        out.flush();
        int rating = Integer.parseInt(scanner.nextLine());

        out.println("Enter your comment:");
        out.flush();
        String comment = scanner.nextLine();

        out.println("Enter your user ID:");
        out.flush();
        int userId = Integer.parseInt(scanner.nextLine());

        out.println(itemId + " " + rating + " " + comment + " " + userId);
        out.flush();

        receiveAndPrintMultipleResponses();
    }

    private void logout() {
        try {
            out.println("LOGOUT");
            out.flush();
            socket.close();
        } catch (IOException e) {
            System.out.println("Error closing socket: " + e.getMessage());
        }
    }

    private void receiveAndPrintMultipleResponses() {
        try {
            String response;
            while (!(response = in.readLine()).equals("END_OF_MENU_ITEMS") && !response.equals("END_OF_NOTIFICATIONS")) {
                System.out.println(response);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
