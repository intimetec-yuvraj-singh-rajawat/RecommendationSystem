package handler;

import model.MenuItem;
import service.MenuService;

import java.io.PrintWriter;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

public class AdminHandler {
    private final MenuService menuService;
    private final PrintWriter out;

    public AdminHandler(PrintWriter out) {
        this.menuService = new MenuService();
        this.out = out;
    }

    public void handleCommand(String inputLine) throws SQLException {
        if (inputLine.startsWith("ADD_MENU_ITEM ")) {
            handleAddMenuItem(inputLine);
        } else if (inputLine.startsWith("UPDATE_MENU_ITEM ")) {
            handleUpdateMenuItem(inputLine);
        } else if (inputLine.startsWith("DELETE_MENU_ITEM ")) {
            handleDeleteMenuItem(inputLine);
        } else if (inputLine.startsWith("LIST_MENU_ITEMS")) {
            handleListMenuItems();
        } else {
            out.println("Unknown admin command");
        }
    }

    private void handleAddMenuItem(String inputLine) throws SQLException {
        String[] parts = inputLine.split(" ");
        if (parts.length == 4) {
            String name = parts[1];
            BigDecimal price = new BigDecimal(parts[2]);
            boolean availability = Boolean.parseBoolean(parts[3]);

            MenuItem menuItem = new MenuItem(0, name, price, availability); // ID will be auto-generated
            menuService.addMenuItem(menuItem);
            out.println("Menu item added successfully");
        } else {
            out.println("Invalid ADD_MENU_ITEM command");
        }
    }

    private void handleUpdateMenuItem(String inputLine) throws SQLException {
        String[] parts = inputLine.split(" ");
        if (parts.length == 5) {
            int id = Integer.parseInt(parts[1]);
            String name = parts[2];
            BigDecimal price = new BigDecimal(parts[3]);
            boolean availability = Boolean.parseBoolean(parts[4]);

            MenuItem menuItem = new MenuItem(id, name, price, availability);
            menuService.updateMenuItem(menuItem);
            out.println("Menu item updated successfully");
        } else {
            out.println("Invalid UPDATE_MENU_ITEM command");
        }
    }

    private void handleDeleteMenuItem(String inputLine) throws SQLException {
        String[] parts = inputLine.split(" ");
        if (parts.length == 2) {
            int id = Integer.parseInt(parts[1]);
            menuService.deleteMenuItem(id);
            out.println("Menu item deleted successfully");
        } else {
            out.println("Invalid DELETE_MENU_ITEM command");
        }
    }

    private void handleListMenuItems() throws SQLException {
        List<MenuItem> menuItems = menuService.getAllMenuItems();
        for (MenuItem menuItem : menuItems) {
            out.println(menuItem.getId() + " " + menuItem.getName() + " " + menuItem.getPrice() + " " + menuItem.isAvailable());
        }
    }
}
