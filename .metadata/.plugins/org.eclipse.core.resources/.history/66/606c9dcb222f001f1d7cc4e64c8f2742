package client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class CafeteriaClient {
    private static final String SERVER_ADDRESS = "localhost";
    private static final int SERVER_PORT = 12345;

    public static void main(String[] args) {
        try (Socket socket = new Socket(SERVER_ADDRESS, SERVER_PORT);
             PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
             Scanner scanner = new Scanner(System.in)) {

            Thread listenerThread = new Thread(new Runnable() {
				@Override
				public void run() {
				    String serverMessage;
				    try {
				        while ((serverMessage = in.readLine()) != null) {
				            System.out.println("Server: " + serverMessage);
				            if (serverMessage.equals("LOGOUT SUCCESSFUL")) {
				                break;
				            }
				        }
				    } catch (IOException e) {
				        e.printStackTrace();
				    }
				}
			});
            listenerThread.start();

            System.out.println("Connected to the server.");

            System.out.print("Enter your username: ");
            String username = scanner.nextLine();
            System.out.print("Enter your password: ");
            String password = scanner.nextLine();

            out.println("LOGIN " + username + " " + password);

            String loginResponse = in.readLine();
            if ("LOGIN SUCCESSFUL".equals(loginResponse)) {
                System.out.println("LOGIN SUCCESSFUL");

                String roleResponse = in.readLine();
                if (roleResponse.startsWith("ROLE: ")) {
                    String role = roleResponse.substring(6);
                    System.out.println("Logged in as: " + role);

                    while (true) {
                        displayMenu();
                        String clientMessage = scanner.nextLine();

                        if (clientMessage.equalsIgnoreCase("LOGOUT")) {
                            out.println(clientMessage);
                            break;
                        } else if (clientMessage.equals("1")) {
                            System.out.print("Enter menu item details (name price available): ");
                            String name = scanner.next();
                            double price = scanner.nextDouble();
                            boolean available = scanner.nextBoolean();
                            out.println("ADD MENU " + name + " " + price + " " + available);
                        } else if (clientMessage.equals("2")) {
                            System.out.print("Enter menu item ID to update: ");
                            int id = scanner.nextInt();
                            System.out.print("Enter new menu item details (name price available): ");
                            String name = scanner.next();
                            double price = scanner.nextDouble();
                            boolean available = scanner.nextBoolean();
                            out.println("UPDATE MENU " + id + " " + name + " " + price + " " + available);
                        } else if (clientMessage.equals("3")) {
                            System.out.print("Enter menu item ID to delete: ");
                            int id = scanner.nextInt();
                            out.println("DELETE MENU " + id);
                        } else {
                            out.println(clientMessage);
                        }
                    }
                } else {
                    System.out.println("Failed to retrieve role information.");
                }
            } else {
                System.out.println("LOGIN FAILED");
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void displayMenu() {
        System.out.println("\nMenu Options:");
        System.out.println("1. Add Menu Item");
        System.out.println("2. Update Menu Item");
        System.out.println("3. Delete Menu Item");
        System.out.println("Type LOGOUT to logout");
        System.out.print("Select an option: ");
    }
}


/*package client;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Scanner;

public class CafeteriaClient {
    private static final String SERVER_ADDRESS = "localhost";
    private static final int SERVER_PORT = 12345;

    public static void main(String[] args) {
        try (Socket socket = new Socket(SERVER_ADDRESS, SERVER_PORT);
             PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
             Scanner scanner = new Scanner(System.in)) {

            Thread listenerThread = new Thread(new Runnable() {
                public void run() {
                    String serverMessage;
                    try {
                        while ((serverMessage = in.readLine()) != null) {
                            System.out.println("Server: " + serverMessage);
                            if (serverMessage.equals("LOGOUT SUCCESSFUL")) {
                                break;  
                            }
                        }
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            });
            listenerThread.start();

            System.out.println("Connected to the server.");

            System.out.print("Enter your username: ");
            String username = scanner.nextLine();
            System.out.print("Enter your password: ");
            String password = scanner.nextLine();

            out.println("LOGIN " + username + " " + password);

            while (scanner.hasNextLine()) {
                String clientMessage = scanner.nextLine();

                if (clientMessage.equalsIgnoreCase("LOGOUT")) {
                    out.println(clientMessage);
                    break;  
                } else {
                    out.println(clientMessage);
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
*/